# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    binance.api_url: '%env(resolve:BINANCE_API_URL)%'
    monobank.api_url: '%env(resolve:MONOBANK_API_URL)%'

    redis.url: '%env(resolve:REDIS_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Domain/Entity/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ResponseListener:
        class: 'App\Application\Listener\KernelListener'
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 4096 }
            - { name: kernel.event_listener, event: kernel.exception }
            - { name: kernel.event_listener, event: kernel.response }

    GuzzleHttp\ClientInterface:
        class: GuzzleHttp\Client

    App\Infrastructure\Client\BinanceClient:
        arguments:
            $binanceAPIUrl: '%binance.api_url%'

    App\Infrastructure\Client\MonoBankClient:
        arguments:
            $monoBankAPIUrl: '%monobank.api_url%'

    App\Domain\Contract\Verification\VerifyUserCredentialsInterface:
        class: 'App\Application\Security\Authorization\VerifyUserCredentials'

    RedisConnection:
        class: 'Redis'
        factory: [ 'Symfony\Component\Cache\Adapter\AbstractAdapter', 'createConnection' ]
        arguments:
            $dsn: '%redis.url%'

    Symfony\Component\Cache\Adapter\AdapterInterface:
        class: 'Symfony\Component\Cache\Adapter\RedisAdapter'
        arguments:
            $redis: '@RedisConnection'
            $marshaller: '@App\Application\Marshaller\RedisMarshaller'
